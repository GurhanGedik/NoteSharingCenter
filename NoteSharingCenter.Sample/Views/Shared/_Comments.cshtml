@using NoteSharingCenter.Entity
@using NoteSharingCenter.Repository
@using NoteSharingCenter.Sample.Models
@model Note

@{
    NoteRepository nr = new NoteRepository();
    Note list = nr.Find(x => x.Id == Model.Id);

    Users user = MySession.CurrentUser;
}

<div id="comments" class="post-block mt-5 post-comments">
    <h4 class="mb-3">Comments</h4>

    <ul class="comments">
        @foreach (var item in list.Comments)
        {
            <li>
                <div class="comment">
                    <div class="comment-block">
                        <div class="comment-arrow"></div>
                        <span class="comment-by">
                            <strong>@item.Owner.Name</strong>
                            @if (user != null && user.Id == item.Owner.Id)
                            {
                                <span class="float-right">
                                    <button type="button" class="btn p-1" data-edit-mode="false" onclick="doComment(this,'edit_clicked',@item.Id,'#comment_@item.Id')">
                                        <span class="far fa-edit text-primary"></span>
                                    </button>
                                    <button type="button" class="btn p-1" onclick="doComment(this,'delete_clicked',@item.Id)">
                                        <span class="far fa-trash-alt text-primary"></span>
                                    </button>
                                </span>
                            }
                        </span>
                        <div class="col-md-10">
                            <p id="comment_@item.Id" contenteditable="false">@item.Text</p>
                        </div>

                        <span class="date float-right">@item.CreatedOn</span>
                    </div>
                </div>
            </li>
        }

    </ul>

</div>

@if (user != null)
{
    <div class="post-block mt-5 post-leave-comment">
        <h4 class="mb-3">Leave a comment</h4>

        <form id="contactForm" class="contact-form p-4 rounded bg-color-grey" action="php/contact-form.php" method="POST">
            <div class="p-2">
                <div class="form-row">
                    <div class="form-group col">
                        <label class="required font-weight-bold text-dark">Comment</label>
                        <textarea maxlength="5000" data-msg-required="Please enter your message." rows="8" class="form-control" name="message" id="comment" required></textarea>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col mb-0">
                            <button type="button" class="btn btn-primary btn-modern" onclick="doComment(this, 'new_clicked', @Model.Id)">
                                <span class="far fa-comment text-6"> </span><span class="text-3 text-center"> Comment</span>
                            </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
}


<style>
    .textEdit {
        border-radius: 3px;
        background-color: #cacaca;
        color: #000;
        padding-left: 7px !important;
    }
</style>
<script>
    function doComment(btn, e, commentid, spanid) {

        var button = $(btn);
        var mode = button.data("edit-mode");

        if (e === "edit_clicked") {

            if (!mode) {
                button.data("edit-mode", true);
                var btnSpan = button.find("span");
                btnSpan.removeClass("far fa-edit text-primary");
                btnSpan.addClass("fas fa-check text-success");

                $(spanid).addClass("textEdit");
                $(spanid).attr("contenteditable", true);
                $(spanid).focus();
            }
            else {
                button.data("edit-mode", false);
                var btnSpan = button.find("span");
                btnSpan.addClass("far fa-edit text-primary");
                btnSpan.removeClass("fas fa-check text-success");

                $(spanid).removeClass("textEdit");
                $(spanid).attr("contenteditable", false);

                var txt = $(spanid).text();

                $.ajax({
                    method: "POST",
                    url: "/Home/CommentEdit/" + commentid,
                    data: { text: txt }
                }).done(function (data) {

                    if (data.result) {
                    }
                    else {
                        alert("Failed to update comment.");
                    }

                }).find(function () {
                    alert("Connection to server failed");
                });

            }
        }
        else if (e === "delete_clicked") {
            var dialog = confirm("Are you sure you want to delete the comment?")

            if (!dialog) return false;

            $.ajax({
                method: "GET",
                url: "/Home/CommentDelete/" + commentid
            }).done(function (data) {

                if (data.result) {
                    location.reload();
                }
                else {
                    alert("Failed to delete comment.");
                }

            }).fail(function () {
                alert("Connection to server failed");
            });
        }
        else if (e === "new_clicked") {

            var txt = $("#comment").val();

            $.ajax({
                method: "POST",
                url: "/Home/CommentCreate/",
                data: { "text": txt, "noteId": commentid }
            }).done(function (data) {

                if (data.result) {
                    location.reload();
                }
                else {
                    alert("Could not add comment.");
                }

            }).fail(function () {
                alert("Connection to server failed");
            });
        }

    }
</script>
